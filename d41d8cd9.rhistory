fill = "cornflowerblue") +
facet_wrap(facets = ~variables, scales = "free")
theme_bw() +
labs(title = "Frequency distribution of the numeric variables")
df %>%
select_if(is.numeric) %>%
select(-year) %>%
tidyr::pivot_longer(everything(),
names_to = "variables",
values_to = "values") %>%
ggplot(mapping = aes(x = values)) +
geom_histogram(bins = 30,
color = "black",
fill = "cornflowerblue") +
scale_x_log10()+
facet_wrap(facets = ~variables, scales = "free")
theme_bw() +
labs(title = "Frequency distribution of the numeric variables")
df %>%
select_if(is.numeric) %>%
select(-year) %>%
tidyr::pivot_longer(everything(),
names_to = "variables",
values_to = "values") %>%
ggplot(mapping = aes(x = values)) +
geom_histogram(bins = 30,
color = "black",
fill = "cornflowerblue") +
scale_x_log10()+
facet_wrap(facets = ~variables, scales = "free")
theme_bw() +
labs(title = "Frequency distribution of the numeric variables")
df_cluster = df %>%
select(rating, genre, score, budget, gross, country)
df_cluster1 <- daisy(df_cluster, metric = "gower")
summary(df_cluster1)
silhouette <- c(NA)
for(i in 2:20){
pam <- pam(df_cluster1,
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:20,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
lines(1:20,  silhouette)
df$rating = as.factor(df$rating)
df$genre = as.factor(df$genre)
df$country = as.factor(df$country)
df_cluster = df %>%
select(rating, genre, score, budget, gross, runtime, country)
df_cluster1 <- daisy(df_cluster, metric = "gower")
summary(df_cluster1)
silhouette <- c(NA)
for(i in 2:20){
pam <- pam(df_cluster1,
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:20,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
lines(1:20,  silhouette)
silhouette <- c(NA)
for(i in 2:20){
pam <- pam(as.matrix(df_cluster1),
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:20,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
lines(1:20,  silhouette)
silhouette <- c(NA)
for(i in 2:50){
pam <- pam(as.matrix(df_cluster1),
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:20,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
silhouette <- c(NA)
for(i in 2:50){
pam <- pam(as.matrix(df_cluster1),
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:50,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
lines(1:50,  silhouette)
silhouette <- c(NA)
for(i in 2:30){
pam <- pam(as.matrix(df_cluster1),
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:50,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
silhouette <- c(NA)
for(i in 2:40){
pam <- pam(as.matrix(df_cluster1),
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:40,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
lines(1:40,  silhouette)
max_k = max(silhouette)
silhouette
silhouette
silhouette <- c()
for(i in 2:40){
pam <- pam(as.matrix(df_cluster1),
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:40,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
lines(1:40,  silhouette)
max_k = max(silhouette)
max_k
silhouette <- c()
for(i in 2:40){
pam <- pam(as.matrix(df_cluster1),
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:40,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
lines(1:40,  silhouette)
silhouette
silhouette <- c()
for(i in 2:40){
pam <- pam(as.matrix(df_cluster1),
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:40,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
lines(1:40,  silhouette)
pam
pam$clustering
pam$silinfo
pam$silinfo[1]
pam$silinfo$avg.width
pam$silinfo
pam$silinfo$widths
silhouette <- c()
for(i in 2:40){
pam <- pam(as.matrix(df_cluster1),
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:40,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
lines(1:40,  silhouette)
silhouette <- c()
k_num <- 2:40
for(i in k_num){
pam <- pam(as.matrix(df_cluster1),
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:40,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
lines(1:40,  silhouette)
cluster_data <- data.frame(clusters = k_num, silhouette_width = silhouette)
silhouette
silhouette <- c()
k_num <- 1:40
for(i in k_num){
pam <- pam(as.matrix(df_cluster1),
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:40,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
lines(1:40,  silhouette)
cluster_data <- data.frame(clusters = k_num, silhouette_width = silhouette)
cluster_data
msx_k = cluster_data$clusters[cluster_data$silhouette_width = max(cluster_data$silhouette_width)]
msx_k = cluster_data$clusters[cluster_data$silhouette_width == max(cluster_data$silhouette_width)]
msx_k
max_k = cluster_data$clusters[cluster_data$silhouette_width == max(cluster_data$silhouette_width),]
cluster_data <- data.frame(clusters = k_num, silhouette_width = silhouette)
max_k = cluster_data$clusters
max_k
cluster_data$silhouette_width == max(cluster_data$silhouette_width)
max(cluster_data$silhouette_width)
max_k = cluster_data$clusters[cluster_data$silhouette_width == max(cluster_data$silhouette_width, na.rm = TRUE),]
max_k = cluster_data$clusters[cluster_data$silhouette_width == max(cluster_data$silhouette_width, na.rm = TRUE)]
max_k
cluster_data <- data.frame(clusters = k_num, silhouette_width = silhouette)
max_k = cluster_data$clusters[cluster_data$silhouette_width == max(cluster_data$silhouette_width, na.rm = TRUE)]
max_k
df_cluster1 <- daisy(df_cluster, metric = "gower")
summary(df_cluster1)
silhouette <- c()
k_num <- 1:40
for(i in k_num){
pam <- pam(as.matrix(df_cluster1),
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:40,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
lines(1:40,  silhouette)
cluster_data <- data.frame(clusters = k_num, silhouette_width = silhouette)
max_k = cluster_data$clusters[cluster_data$silhouette_width == max(cluster_data$silhouette_width, na.rm = TRUE)]
max_k
cluster_data
cluster_data <- cluster_data[, -1]
max_k = cluster_data$clusters[cluster_data$silhouette_width == max(cluster_data$silhouette_width, na.rm = TRUE)]
cluster_data <- data.frame(clusters = k_num, silhouette_width = silhouette)
cluster_data <- cluster_data[-1,]
cluster_data
max_k = cluster_data$clusters[cluster_data$silhouette_width == max(cluster_data$silhouette_width, na.rm = TRUE)]
max_k
pam_fit <- pam(df_cluster_1, diss = TRUE, k = max_k)
pam_fit <- pam(df_cluster1, diss = TRUE, k = max_k)
tsne <- Rtsne(df_cluster1, is_distance = TRUE)
library(tsne)
install.packages("tsne")
library(tsne)
library(tsne)
pam_fit <- pam(df_cluster1, diss = TRUE, k = max_k)
tsne <- Rtsne(df_cluster1, is_distance = TRUE)
install.packages("Rtsne")
library(Rtsne)
pam_fit <- pam(df_cluster1, diss = TRUE, k = max_k)
tsne <- Rtsne(df_cluster1, is_distance = TRUE)
tsne_info <- tsne$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit$clustering))
ggplot(aes(x = X, y = Y), data = tsne_info) +
geom_point(aes(color = cluster))
is.na(df)
sum(is.na(df))
library(dplyr)
library(visdat)
library(purrr)
library(ggplot2)
library(funModeling)
library(utils)
library(corrplot)
library(kableExtra)
library(cluster)
library(Rtsne)
df <-  read.csv("movies.csv")
dim(df)
df <- df %>%
filter(year == params$year)
kbl(df) %>%
kable_paper() %>%
scroll_box(width = "100%", height = "200px")
df[df == ""] <- NA
df <- na.omit(df)
df$release.date <- sub("\\(.*", "", df$released)
df$release.country <- sub(".*\\(", "", df$released)
df$release.country <- sub(")", "", df$release.country)
num.var <- length(select_if(df,is.numeric))
char.var <- length(select_if(df,is.character))
int.var <- length(select_if(df,is.integer))
vis_dat(df, sort_type = FALSE)
na <- sum(sapply(df, is.na))
na.var <- names(which(colSums(is.na(df)) > 0))
min.year <- min(params$year)
max.year <- max(params$year)
df %>%
select_if(is.numeric) %>%
select(-year) %>%
tidyr::pivot_longer(everything(),
names_to = "variables",
values_to = "values") %>%
ggplot(mapping = aes(x = values)) +
geom_histogram(bins = 30,
color = "black",
fill = "cornflowerblue") +
scale_x_log10()+
facet_wrap(facets = ~variables, scales = "free")
theme_bw() +
labs(title = "Frequency distribution of the numeric variables")
df %>%
select_if(is.character) %>%
group_by(genre) %>%
summarise(counts = n()) %>%
na.omit() %>%
ggplot(mapping = aes(x = reorder(genre, counts),
y = counts,
fill = genre)) +
geom_bar(stat = "identity",
color = "black",
position = position_dodge(width = 0.9)) +
coord_flip() +
geom_text(aes(label = counts), hjust = 1.5,vjust = 0.5,
colour = "white", fontface = "bold",
position = position_dodge(width = 0.9)) +
labs(x = "", title = "Counts of variable genre") +
scale_fill_brewer(palette = "Set2") +
theme_bw()
# Getting counts of the variable genre in descending order
df.genre.max <- df %>%
group_by(genre) %>%
na.omit() %>%
summarise(counts = n()) %>%
arrange(desc(counts))
max.movies <- as.numeric(paste(df.genre.max[1,2]))
cat.movies <- paste(df.genre.max[1,1])
action <- na.omit(count(df, genre == "Action")[2,2])
# Getting counts of the variable GENRE in ascenidng order
df.genre.min <- df.genre.max %>%
arrange(counts)
min.movies <- paste(df.genre.min[1,1])
c.min.movies <- as.numeric(paste(df.genre.min[1,2]))
df %>%
select_if(is.character) %>%
group_by(rating) %>%
summarise(counts = n()) %>%
na.omit() %>%
ggplot(mapping = aes(x = reorder(rating, counts),
y = counts,
fill = rating)) +
geom_bar(stat = "identity",
color = "black",
position = position_dodge(width = 0.9)) +
coord_flip() +
geom_text(aes(label = counts), hjust = 1.5,vjust = 0.5,
colour = "white", fontface = "bold",
position = position_dodge(width = 0.9)) +
labs(x = "", title = "Counts of variable rating") +
scale_fill_brewer(palette = "Set2") +
theme_bw()
# Getting counts of the variable GENRE in descending order
df.rating.max <- df %>%
group_by(rating) %>%
summarise(counts = n()) %>%
arrange(desc(counts))
max.rat <- as.numeric(paste(df.rating.max[1,2]))
cat.rat <- paste(df.rating.max[1,1])
cat.rat2 <- paste(df.rating.max[2,1])
rat2 <- as.numeric(paste(df.rating.max[2,2]))
# Getting counts of the variable GENRE in ascenidng order
df.rating.min <- df.rating.max %>%
arrange(counts)
min.rat <- paste(df.rating.min[1,1])
c.min.rat <- as.numeric(paste(df.rating.min[1,2]))
df %>%
select_if(is.character) %>%
group_by(country) %>%
summarise(counts = n()) %>%
na.omit() %>%
ggplot(mapping = aes(x = reorder(country, counts),
y = counts)) +
geom_bar(stat = "identity",
color = "black",
position = position_dodge(width = 0.9)) +
ylim(0, 160) +
coord_flip() +
geom_text(aes(label = counts), hjust = -0.2,vjust = 0.5,
colour = "black", fontface = "bold",
position = position_dodge(width = 0.9)) +
labs(x = "", title = "Counts of variable country") +
theme_bw()
# Getting counts of the variable GENRE in descending order
df.dist.max <- df %>%
group_by(country) %>%
summarise(counts = n()) %>%
arrange(desc(counts))
top.country <- paste(df.dist.max[1,1])
c.country <- as.numeric(paste(df.dist.max[1,2]))
top2.country <- paste(df.dist.max[2,1])
c.top2.country <- as.numeric(paste(df.dist.max[2,2]))
# Getting counts of the variable GENRE in ascenidng order
df.dist.min <- df.dist.max %>%
arrange(counts)
min.country <- paste(df.dist.min[1,1])
c.min.country <- as.numeric(paste(df.dist.min[1,2]))
df.num <- df %>%
na.omit() %>%
select(-year) %>%
select_if(is.numeric)
corrplot(corr = cor(df.num), method = "number", diag = FALSE, type = "lower", addCoefasPercent = TRUE, tl.cex = 1.5)
# correlation matrix for reproducibility in the text
df.cor <- corrr::correlate(df.num)
cor.var1 <- paste(dplyr::arrange(corrr::stretch(df.cor, remove.dups = TRUE), desc(r))[1,1])
cor.var2 <- paste(dplyr::arrange(corrr::stretch(df.cor, remove.dups = TRUE), desc(r))[1,2])
cor.var3 <- paste(dplyr::arrange(corrr::stretch(df.cor, remove.dups = TRUE), desc(r))[2,1])
cor.var4 <- paste(dplyr::arrange(corrr::stretch(df.cor, remove.dups = TRUE), desc(r))[2,2])
coef1 <- as.numeric(paste(dplyr::arrange(corrr::stretch(df.cor, remove.dups = TRUE), desc(r))[1,3]))
coef2 <- as.numeric(paste(dplyr::arrange(corrr::stretch(df.cor, remove.dups = TRUE), desc(r))[2,3]))
df$rating = as.factor(df$rating)
df$genre = as.factor(df$genre)
df$country = as.factor(df$country)
sum(is.na(df))
df$genre
df$country
counts(df$country)
df_country %>%
select_if(is.character) %>%
group_by(country) %>%
summarise(counts = n())
df_country<- df %>%
select_if(is.character) %>%
group_by(country) %>%
summarise(counts = n())
df
df_country<- df %>%
select_if(is.character) %>%
group_by(country) %>%
summarise(counts = n())
df_country<- df %>%
group_by(country) %>%
summarise(counts = n())
df_country
max(df_country)$counts
max(df_country$counts)
df_country$country[df_country$counts == max(df_country$counts)]
df_country<- df %>%
group_by(country) %>%
summarise(counts = n())
if(max(df_country$counts) > 120){
df['country_dummy'] <- ifelse(df$country == df_country$country[df_country$counts == max(df_country$counts)], TRUE, FALSE)
}
df_country<- df %>%
group_by(country) %>%
summarise(counts = n())
if(max(df_country$counts) > 50){
df['country_dummy'] <- ifelse(df$country == df_country$country[df_country$counts == max(df_country$counts)], TRUE, FALSE)
}
if('country_dummy' %in% colnames(df)){
df_cluster = df %>%
select(rating, genre, score, budget, gross, runtime, country_dummy) %>%
df.na.omit()
}else{
df_cluster = df %>%
select(rating, genre, score, budget, gross, runtime, country) %>%
df.na.omit()
}
if('country_dummy' %in% colnames(df)){
df_cluster = df %>%
select(rating, genre, score, budget, gross, runtime, country_dummy)
}else{
df_cluster = df %>%
select(rating, genre, score, budget, gross, runtime, country)
}
df_cluster1 <- daisy(df_cluster, metric = "gower")
summary(df_cluster1)
silhouette <- c()
k_num <- 1:40
for(i in k_num){
pam <- pam(as.matrix(df_cluster1),
diss = TRUE,
k = i)
silhouette[i] <- pam$silinfo$avg.width
}
plot(1:40,
silhouette,
xlab = "Number of clusters",
ylab = "Silhouette")
lines(1:40,  silhouette)
cluster_data <- data.frame(clusters = k_num, silhouette_width = silhouette)
cluster_data <- cluster_data[-1,]
max_k = cluster_data$clusters[cluster_data$silhouette_width == max(cluster_data$silhouette_width, na.rm = TRUE)]
max_k
pam_fit <- pam(df_cluster1, diss = TRUE, k = max_k)
tsne <- Rtsne(df_cluster1, is_distance = TRUE)
tsne_info <- tsne$Y %>%
data.frame() %>%
setNames(c("X", "Y")) %>%
mutate(cluster = factor(pam_fit$clustering))
ggplot(aes(x = X, y = Y), data = tsne_info) +
geom_point(aes(color = cluster))
